*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  /* Makes number easy to work with by setting root HTML font-size as a %. (of the user’s default browser font-size. ) */
  /* if the user’s default browser font-size is changed to, ie 20px, 1.6rem would now equal 20px.  */
  font-size: 62.5%;
}

.calc {
  height: 40rem;
  width: 35rem;
  border: black solid 1rem;
  border-radius: 1rem;

  margin: 0 auto;
  margin-top: 20rem;
}

/* standalone feature */
.calc-screen {
  width: 100%;
  height: 5rem;
  font-size: 4rem;
  text-align: right;
  padding-right: 0.6rem;
}

.calc-btns {
  padding: 1rem;
  /* 100% of the height or parent container height: 100%; */
  /* 87% to prevent btns from flowing out of calc-btns; 13% is taken up by screen */
  height: 87%;
  /* create grid for calc btns */
  display: grid;
  /* grid-template allows us to specify how many rows or cols and of what sizes they should be in the grid.  */
  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 1rem;
}

/* a grid item */
.btn-clear {
  /* A grid line is a line that exists on each side of a column and a row. */
  /* useful when moving/positioning grid items from one place to another in the grid */
  grid-column-start: 1;
  grid-column-end: 4;
}

.btn-zero {
  /* make item span across multiple columns by targeting them specifically */
  grid-column: span 2;
}
